{"version":3,"sources":["Square.js","Board.js","action.js","reducer.js","store.js","App.js","index.js"],"names":["Square","className","onClick","this","props","handleClick","value","React","Component","BoardContainer","state","squares","Array","fill","xIsNext","winner","gamerunning","i","slice","alert","setState","lines","length","a","b","c","checkWinner","updateScore","includes","isDraw","restartGameProp","restartGame","winnerProp","xIsNextProp","renderSquare","scoreHistory","GameAction","type","GameScore","map","data","index","Board","connect","INITIAL_STATE","store","createStore","action","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.660252e7.chunk.js","sourcesContent":["import React from 'react';\n\nclass Square extends React.Component {\n    render() {\n        return (\n            <button className=\"square\" onClick={this.props.handleClick}>{this.props.value}</button>\n        )\n    }\n}\n\nexport default Square;","import React from 'react';\nimport Square from './Square';\nimport {connect} from 'react-redux';\nimport {updateScore} from './action';\n\nclass BoardContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            squares: new Array(9).fill(''),\n            xIsNext: true,\n            winner: '',\n            gamerunning: true\n        }\n    }\n\n    handleClick(i) {\n        var squares = this.state.squares.slice();\n        if (!this.state.gamerunning) {\n            alert(\"Game ended\");\n            return false;\n        }\n        if (squares[i] == '') {\n            squares[i] = this.state.xIsNext ? 'X' : 'O';\n            this.setState({\n                squares: squares,\n                xIsNext: !this.state.xIsNext\n            });\n\n            var winner = checkWinner(squares);\n            if (winner != '') {\n                this.props.updateScore(winner);\n                this.setState({\n                    winner: winner,\n                    gamerunning: false\n                });\n            } else {\n                if (!squares.includes('')) {\n                    this.props.updateScore('Draw');\n                    this.setState({isDraw: true});\n                }\n            }\n        } else {\n            alert('Already selected');\n        }\n        \n    }\n\n    renderSquare(i) {\n        return(\n            <Square value={this.state.squares[i]} handleClick={() => this.handleClick(i)}/>\n        );\n    }\n    restartGame() {\n        this.setState({\n            squares: new Array(9).fill(''),\n            gamerunning: true,\n            xIsNext: true,\n            winner: '',\n            isDraw: false\n        });\n    }\n    render() {\n        return(\n            <div>\n                <div className=\"cont\">\n                    <GameAction restartGameProp={() => this.restartGame()} winnerProp={this.state.winner} xIsNextProp={this.state.xIsNext} isDraw={this.state.isDraw} />\n                    <div>\n                        {this.renderSquare(0)}\n                        {this.renderSquare(1)}\n                        {this.renderSquare(2)}\n                    </div>\n\n                    <div>\n                        {this.renderSquare(3)}\n                        {this.renderSquare(4)}\n                        {this.renderSquare(5)}\n                    </div>\n\n                    <div>\n                        {this.renderSquare(6)}\n                        {this.renderSquare(7)}\n                        {this.renderSquare(8)}\n                    </div>\n                </div>\n                <div className=\"clearboth\"></div>\n                <GameScore scoreHistory={this.props.scoreHistory} />\n            </div>\n        )\n    }\n}\n\nclass GameAction extends React.Component {\n    render() {\n        return (\n            <div>\n                <div className=\"winner_msg font24\">{this.props.winnerProp ? 'Congratulations!! Winner is: ' + this.props.winnerProp : ''}</div><br/>\n                <div className=\"draw_msg font24\">{this.props.isDraw ? 'Match Draw' : ''}</div><br/>\n                <div>Next Player: {this.props.xIsNextProp ? 'X' : 'O'}</div><br/>\n                <input type=\"button\" className=\"restart_btn\" onClick = {this.props.restartGameProp} value=\"Restart Game\" /><br/><br/>\n            </div>\n        );\n    }\n}\n\nclass GameScore extends React.Component {\n    render() {\n        return (\n            <div className=\"cont\">\n                <h3>Game Score</h3>\n                {this.props.scoreHistory.map((data, index) => (\n                    <p>{\"Match \"+ (index+1) + \" winner is:\"+data}</p>\n                ))}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        ...state\n    }\n};\n\nconst Board = connect(mapStateToProps, {\n    updateScore\n})(BoardContainer);\n\nexport default Board;\n\nfunction checkWinner(squares) {\n    var lines = [\n        [0,1,2],\n        [3,4,5],\n        [6,7,8],\n        [0,3,6],\n        [1,4,7],\n        [2,5,8],\n        [0,4,8],\n        [2,4,6]\n    ];\n\n    for (var i=0; i< lines.length; i++) {\n        var[a,b,c] = lines[i];\n\n        if (squares[a] === squares[b] && squares[b] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return '';\n}","export const updateScore = (value) => {\n    return {\n            type: 'SCORE_HISTORY',\n            scoreHistory: value\n    }\n}\n\n","const INITIAL_STATE = {\n    scoreHistory: []\n};\n\nexport const reducer = (state = INITIAL_STATE, action) => {\n    switch(action.type) {\n        case 'SCORE_HISTORY': \n            return {\n                ...state, \n                scoreHistory: [...state.scoreHistory, action.scoreHistory]\n            }\n        default:\n            return state;\n    }\n}","import {createStore} from 'redux';\nimport {reducer} from './reducer';\n\nconst store = createStore(reducer);\n\nexport {store};\n\n\n\n","import './App.css';\nimport Board from './Board';\nimport {Provider} from 'react-redux';\nimport {store} from './store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Board />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}